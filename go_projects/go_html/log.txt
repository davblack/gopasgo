package log // import "log"

Package log implements a simple logging package. It defines a type, Logger,
with methods for formatting output. It also has a predefined 'standard'
Logger accessible through helper functions Print[f|ln], Fatal[f|ln], and
Panic[f|ln], which are easier to use than creating a Logger manually. That
logger writes to standard error and prints the date and time of each logged
message. Every log message is output on a separate line: if the message
being printed does not end in a newline, the logger will add one. The Fatal
functions call os.Exit(1) after writing the log message. The Panic functions
call panic after writing the log message.

const Ldate = 1 << iota ...
func Fatal(v ...any)
func Fatalf(format string, v ...any)
func Fatalln(v ...any)
func Flags() int
func Output(calldepth int, s string) error
func Panic(v ...any)
func Panicf(format string, v ...any)
func Panicln(v ...any)
func Prefix() string
func Print(v ...any)
func Printf(format string, v ...any)
func Println(v ...any)
func SetFlags(flag int)
func SetOutput(w io.Writer)
func SetPrefix(prefix string)
func Writer() io.Writer
type Logger struct{ ... }
    func Default() *Logger
    func New(out io.Writer, prefix string, flag int) *Logger
